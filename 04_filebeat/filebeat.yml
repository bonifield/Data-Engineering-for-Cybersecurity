filebeat.inputs:

# input that reads local files from custom recon tooling
- type: filestream
  id: recon-logs
  enabled: false
  paths:
    - /home/j/example-logs/subfinder*.json
    - /home/j/example-logs/httpx*.json
  parsers:
    - ndjson:
        target: "processed"
        add_error_key: true
  fields_under_root: true
  fields:
    threat.tactic.name: "Reconnaissance"
    threat.tactic.id: "TA0043"
    threat.technique.name: "Gather Victim Network Information"
    threat.technique.id: "T1590"

# input that reads /var/log/*.log
# see also the system module
#	filebeat modules enable system
#	# enable settings in modules.d/system.yml
#	# then run filebeat
- type: filestream
  id: local-syslog-files
  enabled: false
  paths:
    - /var/log/*.log
  exclude_lines: ['.*UFW.*']
  parsers:
    - syslog:
        format: auto
        add_error_key: true

# input that connects over plaintext to Kafka
- type: kafka
  enabled: false
  hosts:
    - kafka01:9093
    - kafka02:9093
  topics: [ "filebeat" ]
  group_id: "filebeat"
  tags: [ "from-kafka" ]
  parsers:
    - ndjson:
        message_key: "message"
        target: "processed"
        overwrite_keys: true
        add_error_key: true

processors:

  - drop_fields:
      # you can't drop event.original nor metadata fields that start with "@"
      fields: ["ecs", "agent.id", "agent.ephemeral_id"]
      when:
        #equals:
          #log.file.path: "/home/j/example-logs/httpx-owasp.org.json"
        or:
          - equals:
              log.file.path: "/home/j/example-logs/httpx-owasp.org.json"
          - equals:
              log.file.path: "/home/j/example-logs/subfinder-owasp.org.json"

  # fix a nested timestamp
  - script:
      lang: javascript
      # example
      # 2099-04-27T22:37:12.463504006-05:00
      #          | 10         |23    |29
      source: >
        function process(event) {
          var t = event.Get("processed.timestamp")
          var front = t.slice(0, 23)
          var back = t.slice(29)
          var combined = front+back
          event.Put("processed.timestamp_fixed", combined)
        }
      when:
        has_fields: [ "processed.timestamp" ]

  # use as document timestamp, instead of "now" time
  - timestamp:
      field: "processed.timestamp_fixed"
      layouts:
        - '2006-01-02T15:04:05.999-07:00'
      test:
        - '2099-04-27T22:37:12.463-05:00'
      when:
        has_fields: [ "processed.timestamp_fixed" ]

#  - script:
#      lang: javascript
#      source: >
#        function process(event) {
#          event.Put("user.name", "BankUser")
#        }
#      when:
#        has_fields: [ "user.name" ]

# module location
filebeat.config.modules:
  path: ${path.config}/modules.d/*.yml

tags: [ "tags-for-everybody", "you-get-a-tag", "and-you-get-a-tag" ]

output.logstash:
  enabled: true
  hosts: [ "logstash.local:5044" ]
  ssl.enabled: true
  ssl.verification_mode: full
  ssl.certificate: "/home/j/tls/certs/filebeat.local.flex.cert.pem"
  ssl.key: "/home/j/tls/keys/filebeat.local.flex.key.pem"
  ssl.certificate_authorities:
    - /home/j/tls/certs/ca-chain.cert.pem

# quick Kafka setup using Docker
# pull image (substitute latest version numbers): docker pull apache/kafka-native:X.Y.Z
# launch container on host network: docker run --network=host -p 9092:9092 apache/kafka:X.Y.Z
# connect to the container (in another container): docker exec -it `docker ps | grep kafka | cut -d ' ' -f 1` bash
# inside container, create "filebeat" topic: cd /opt/kafka/bin && ./kafka-topics.sh --create --topic filebeat --bootstrap-server localhost:9092
# then connect Filebeat and Logstash

output.kafka:
  enabled: false
  hosts: [ "127.0.0.1:9092","172.17.0.2" ]
  #hosts: [ "kafka01:9093", "kafka02:9093" ]
  topic: "filebeat"
  client_id: "my-awesome-server-running-filebeat"
  headers:
    - key: "category"
      value: "remoteaccess"
      when:
        equals:
          event.dataset: "zeek.ssh"
    - key: "category"
      value: "web"
      when:
        equals:
          event.dataset: "zeek.tls"

output.redis:
  enabled: false
  hosts: ["localhost"]
  password: "<your redis password>"
  key: "filebeat"
  keys:
    - key: "remoteaccess"
      when:
        or:
          - contains:
              event.dataset: "zeek.ssh"
          - contains:
              event.dataset: "zeek.telnet"
        and:
          - equals:
              event.module: "zeek"
#  ssl.enabled: true
#  ssl.verification_mode: full
#  ssl.certificate: "/home/j/tls/certs/filebeat.local.flex.cert.pem"
#  ssl.key: "/home/j/tls/keys/filebeat.local.flex.key.pem"
#  ssl.certificate_authorities:
#    - /home/j/tls/certs/ca-chain.cert.pem

output.file:
  enabled: false
  path: /var/log/filebeat/
  filename: threatintel
  permissions: 0640

filebeat.config.modules:
  path: ${path.config}/modules.d/*.yml
  reload.enabled: true
  reload.period: 1s
