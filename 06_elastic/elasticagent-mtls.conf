# bin/logstash -f conf.d/elasticagent-mtls.conf --config.test_and_exit
# bin/logstash -f conf.d/elasticagent-mtls.conf --config.reload.automatic

input {
	# accept Elastic Agent input with mTLS
	elastic_agent {
		id => "elastic-agent-input"
		port => 5044
		ssl_enabled => true
		ssl_client_authentication => "required"
		ssl_certificate => "/etc/logstash/certs/wildcard.local.flex.cert.pem"
		ssl_key => "/etc/logstash/certs/wildcard.local.flex.key.pem"
		ssl_key_passphrase => "abcd1234"
		ssl_certificate_authorities => [ "/etc/logstash/certs/ca-chain.cert.pem" ]
	}
}

# add the hostname of the logstash server if not present using a loose approximation of an ecs field
filter {
	ruby {
		init => '
			require "socket"
			@@hostname = Socket.gethostname
		'
		code => '
			event.set("[agent][forwarder]", @@hostname)
		'
	}
}

output {
	# display on stdout and send to Elasticsearch
	stdout { codec => rubydebug }
	elasticsearch {
		id => "elasticsearch-output"
		# add hosts here as needed in square brackets (array)
		hosts => "https://elasticsearch01.local:9200"
		# id:api_key
		api_key => "kwouKo0BFSso9JQdUCJj:ANI6NTBMQx2NNDj3UIAxkw"
		data_stream => true
		ssl_enabled => true
		ssl_certificate => "/etc/logstash/certs/wildcard.local.flex.cert.pem"
		ssl_key => "/etc/logstash/certs/wildcard.local.flex.key.nopass.pem"
		#ssl_key => "/etc/logstash/certs/wildcard.local.flex.key.pem"
		#ssl_key_passphrase => "abcd1234"
		ssl_certificate_authorities => [ "/etc/logstash/certs/ca-chain.cert.pem" ]
	}
}
