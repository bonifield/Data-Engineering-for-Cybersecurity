# bin/logstash -f conf.d/split-username.conf --config.test_and_exit
# bin/logstash -f conf.d/split-username.conf --config.reload.automatic

input {
	generator {
		count => 1
		add_field => { "[winlog][event_data][UserName]" => "StLouisOffice\James" }
	}
}

filter {
	# cleanup generator fields so we can focus on what's happening
	#mutate {
	#	remove_field => [ "[event]", "[message]", "[host]", "@version" ]
	#}
	prune {
		whitelist_names => [ "winlog" ]
	}
}

filter {
	# can't split on backspaces, so replace them with forward slashes
	if [winlog][event_data][UserName] =~ /.\\./ {
		# mutate's order of operations lists copy last, so it needs its own block
		mutate {
			copy => { "[winlog][event_data][UserName]" => "[utemp]" }
		}
		# mutate's order of operations allows these to be in the same statement
		mutate {
			gsub => [ "[utemp]", "[\\]", "/" ]
			split => [ "[utemp]", "/" ]
			add_field => {
				"[user][domain]" => "%{[utemp][0]}"
				"[user][name]" => "%{[utemp][1]}"
			}
			remove_field => [ "[utemp]" ]
		}
	} else {
		mutate {
			copy => {
				"[winlog][event_data][UserName]" => "[user][name]"
			}
		}
	}
	# lowercase is processed before gsub and split, so it needs its own mutate block
	mutate {
		lowercase => [ "[user][domain]", "[user][name]" ]
	}
}

output {
	stdout { codec => rubydebug { metadata => "true" }}
}

# expected output
#{
#    "winlog" => {
#        "event_data" => {
#            "UserName" => "StLouisOffice\\James"
#        }
#    },
#      "user" => {
#        "domain" => "stlouisoffice",
#          "name" => "james"
#    }
#}
