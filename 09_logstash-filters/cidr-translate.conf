# bin/logstash -f conf.d/cidr-translate.conf --config.test_and_exit
# bin/logstash -f conf.d/cidr-translate.conf --config.reload.automatic

# this example places lookup files in /home/j/lookups/

input {
	generator {
		count => 1
		add_field => {
			"[source][ip]" => "192.168.8.133"
			"[destination][ip]" => "192.168.8.138"
			#"[destination][ip]" => "8.8.8.8"
		}
	}
}

# cleanup generator fields to better see what's happening
filter {
	mutate {
		remove_field => [ "[event]", "[message]", "[host]", "@version" ]
	}
}

#################################################

# tag homenet
filter {
	# using inline array
	cidr {
		id => "cidr_tag_sourcehomenet"
		address => [ "%{[source][ip]}" ]
		network => [ "10.0.0.0/8", "172.16.0.0/12", "192.168.0.0/16" ]
		add_field => {
			"[source][geo][name]" => "Office Building 1234"
			"[source][geo][city_name]" => "St. Louis"
			"[source][geo][region_name]" => "Missouri"
			"[source][geo][country_name]" => "United States"
		}
		add_tag => "source_homenet"
	}
	# using list of CIDRs
	cidr {
		id => "cidr_tag_destinationhomenet"
		address => [ "%{[destination][ip]}" ]
		network_path => "/home/j/lookups/networks-stlouis.list"
		refresh_interval => 5
		add_field => {
			"[destination][geo][name]" => "Office Building 1234"
			"[destination][geo][city_name]" => "St. Louis"
			"[destination][geo][region_name]" => "Missouri"
			"[destination][geo][country_name]" => "United States"
		}
		add_tag => "destination_homenet"
	}
}

filter {
	if "source_homenet" in [tags] {
		# using YML file with key/value pairs
		translate {
			id => "translate_sourceip_to_hostname"
			source => "[source][ip]"
			target => "[host][name]"
			fallback => "no_match_sourceip"
			dictionary_path => "/home/j/lookups/ip-to-hostname.yml"
			refresh_interval => 5
			refresh_behaviour => "merge"
			#override => true
		}
		# using inline hash/dictionary
		translate {
			id => "translate_hostname_to_userfullname"
			source => "[host][name]"
			target => "[user][full_name]"
			fallback => "no_match_hostname"
			dictionary => {
				"logstash.local" => "Alice Allison"
				"elasticsearch.local" => "Bob Robertson"
			}
			#override => true
		}
		# add directional user information
		mutate {
			copy => { "[user][full_name]" => "[source][user][full_name]" }
		}
	}
	if "destination_homenet" in [tags] {
		translate {
			id => "translate_destinationip_to_destinationdomain"
			source => "[destination][ip]"
			target => "[destination][domain]"
			fallback => "no_match_destinationip"
			dictionary_path => "/home/j/lookups/ip-to-hostname.yml"
			refresh_interval => 5
			refresh_behaviour => "merge"
			#override => true
		}
		translate {
			id => "translate_destinationdomain_to_destinationuserfullname"
			source => "[destination][domain]"
			target => "[destination][user][full_name]"
			fallback => "no_match_destinationdomain"
			dictionary_path => "/home/j/lookups/system-owners.yml"
			refresh_interval => 5
			refresh_behaviour => "merge"
			#override => true
		}
	}
}

# determine network.direction if directional data is present
filter {
	if [source][ip] and [destination][ip] {
		if "source_homenet" in [tags] and "destination_homenet" in [tags] {
			mutate { add_field => { "[network][direction]" => "internal" } }
		}
		else if "source_homenet" in [tags] and "destination_homenet" not in [tags] {
			mutate { add_field => { "[network][direction]" => "outbound" } }
		}
		else if "source_homenet" not in [tags] and "destination_homenet" in [tags] {
			mutate { add_field => { "[network][direction]" => "inbound" } }
		}
		else {
			mutate { add_field => { "[network][direction]" => "unknown" } }
		}
	}
}

output {
	stdout { codec => rubydebug { metadata => "true" }}
}

# example output
#
#{
#    "@timestamp" => 2024-01-12T04:22:17.184746833Z,
#           "host" => {
#        "name" => "logstash.local"
#    },
#    "destination" => {
#           "geo" => {
#               "city_name" => "St. Louis",
#                    "name" => "Office Building 1234",
#            "country_name" => "United States",
#             "region_name" => "Missouri"
#        },
#        "domain" => "elasticsearch.local",
#            "ip" => "192.168.8.138",
#          "user" => {
#            "full_name" => "Bob Robertson"
#        }
#    },
#         "source" => {
#         "geo" => {
#               "city_name" => "St. Louis",
#                    "name" => "Office Building 1234",
#            "country_name" => "United States",
#             "region_name" => "Missouri"
#        },
#          "ip" => "192.168.8.133",
#        "user" => {
#            "full_name" => "Alice Allison"
#        }
#    },
#           "user" => {
#        "full_name" => "Alice Allison"
#    },
#        "network" => {
#        "direction" => "internal"
#    },
#           "tags" => [
#        [0] "source_homenet",
#        [1] "destination_homenet"
#    ]
#}
