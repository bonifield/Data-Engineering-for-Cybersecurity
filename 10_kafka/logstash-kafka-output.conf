# bin/logstash -f conf.d/logstash-kafka-output.conf --config.test_and_exit
# bin/logstash -f conf.d/logstash-kafka-output.conf --config.reload.automatic

# /tmp paths included for easier testing

input {
	# accept Elastic Agent input with mTLS
	elastic_agent {
		id => "elastic-agent-input"
		port => 5044
		ssl_enabled => true
		ssl_client_authentication => "required"
		ssl_certificate => "/etc/logstash/certs/wildcard.local.flex.cert.pem"
		ssl_key => "/etc/logstash/certs/wildcard.local.flex.key.pem"
		#ssl_certificate => "/tmp/wildcard.local.flex.cert.pem"
		#ssl_key => "/tmp/wildcard.local.flex.key.pem"
		ssl_key_passphrase => "abcd1234"
		ssl_certificate_authorities => [ "/etc/logstash/certs/ca-chain.cert.pem" ]
		#ssl_certificate_authorities => [ "/tmp/ca-chain.cert.pem" ]
	}
}

filter {
	mutate {
		add_tag => [ "logstash-to-kafka" ]
	}
}

output {
	stdout { codec => rubydebug { metadata => true }}
	if [agent][type] =~ /(?i)beat/ {
		kafka {
			bootstrap_servers => "kafka01.local:9094,kafka02.local:9094"
			client_id => "logstash"
			security_protocol => "SSL"
			ssl_keystore_location => "/etc/ssl/elastic/wildcard.local.flex.pkcs12"
			#ssl_keystore_location => "/tmp/wildcard.local.flex.pkcs12"
			ssl_keystore_password => "abcd1234"
			ssl_keystore_type => "PKCS12"
			ssl_key_password => "abcd1234"
			ssl_truststore_location => "/etc/ssl/elastic/truststore.jks"
			#ssl_truststore_location => "/tmp/truststore.jks"
			ssl_truststore_password => "abcd1234"
			ssl_truststore_type => "jks"
			topic_id => "%{[@metadata][beat]}"
		}
	}
}
