# https://www.elastic.co/guide/en/logstash/current/plugins-codecs-nmap.html
# https://www.elastic.co/blog/using-nmap-logstash-to-gain-insight-into-your-network
#
# 1. Install the Nmap plugin for Logstash
#	bin/logstash-plugin install logstash-codec-nmap
#
# 2. Run a scan with XML output (-oX)
#	nmap -n --reason --open -sT -T4 -F 192.168.1.0/24 -oX nmap_results.xml
#
# 3. Test then Start Logstash
#	bin/logstash -f conf.d/nmap-http.conf --config.test_and_exit
#	bin/logstash -f conf.d/nmap-http.conf --config.reload.automatic
#
# 4. POST the data to Logstash
#	(make sure logstash.local has a DNS entry)
#	curl --cacert "/home/j/tls/certs/ca-chain.cert.pem" -H "X-Nmap-Target: 192.168.1.0/24" https://logstash.local:8443 --data-binary @/home/j/nmap_results.xml
#	
# 5. Locate data in Elasticsearch or Kibana using the following query:
#	type:(nmap_port OR nmap_scan_metadata)

input {
	http {
		id => "nmap-http-input"
		host => "0.0.0.0"
		port => 8443
		ecs_compatibility => v8
		codec => nmap {
			# don't nest hosts in a single document
			emit_hosts => false
		}
		ssl_enabled => true
		ssl_certificate => "/home/j/tls/certs/wildcard.local.flex.cert.pem"
		ssl_key => "/home/j/tls/keys/wildcard.local.flex.key.pem"
		ssl_key_passphrase => "abcd1234"
		ssl_certificate_authorities => [ "/home/j/tls/certs/ca-chain.cert.pem" ]
		ssl_client_authentication => "optional"
	}
}


# track what was scanned, by saving the custom request header
filter {
	if [@metadata][input][http][request][headers][x_nmap_target] {
		mutate {
			copy => {
			"[@metadata][input][http][request][headers][x_nmap_target]" => "[labels][nmap_target]" }
		}
	} else {
		mutate {
			add_field => { "[labels][nmap_target]" => "not_provided" }
		}
	}
}


#filter {
#	# commented out so you may inspect the fields as-is
#	mutate {
#		rename => {
#			"ip" => "[destination][ip]"
#			"[port][number]" => "[destination][port]"
#			"[port][protocol]" => "[network][transport]"
#			"[port][state]" => "[service][state]"
#			"[service][name]" => "[service][name]"
#			"[service][product]" => "[service][product]"
#			"start_time" => "[event][start]"
#		}
#	}
#}

# cleanup
#filter {
	# drop unnecessary events that don't have an IP (only capture events WITH IPs and ports)
	#if ![destination][ip] {
	#	drop {}
	#}
#}

output {
	stdout { codec => rubydebug }
#	elasticsearch {
#		id => "nmap-elasticsearch-output"
#		hosts => "https://elasticsearch.local:9200"
#		api_key => "kwouKo0BFSso9JQdUCJj:ANI6NTBMQx2NNDj3UIAxkw"
#		data_stream => true
#		ssl_enabled => true
#		ssl_certificate_authorities => "/etc/logstash/certs/ca-chain.cert.pem"
#	}
}
