# bin/logstash -f conf.d/memcached-set-indicators.conf --config.test_and_exit
# bin/logstash -f conf.d/memcached-set-indicators.conf --config.reload.automatic

input {
	logstash {
		id => "input_logstash"
		# remember to open your firewall port
		port => 9800
		ssl_enabled => true
		ssl_client_authentication => "required"
		ssl_certificate => "/etc/ssl/bookproject/wildcard.local.flex.cert.pem"
		ssl_key => "/etc/ssl/bookproject/wildcard.local.flex.key.pem"
		ssl_key_passphrase => "abcd1234"
		ssl_certificate_authorities => [ "/etc/ssl/bookproject/ca-chain.cert.pem" ]
	}
}

filter {
	# TTL: 60 seconds * 60 minutes * 24 hours * 30 days = 2,592,000 seconds
	# set format is value => key
	if ([agent][type] == "filebeat" and [service][type] == "threatintel" and [labels][cti_message]) or [type] == "custom_ioc" or [type] == "external_ioc" {
		# store sha256
		if [labels][sha256_hash] {
			mutate {
				lowercase => [ "[labels][sha256_hash]" ]
			}
			memcached {
				hosts => [ "localhost:11211" ]
				ttl => 2592000
				set => {
					"[labels][cti_message]" => "%{[labels][sha256_hash]}"
				}
			}
		}
		# store md5
		if [labels][md5_hash] {
			mutate {
				lowercase => [ "[labels][md5_hash]" ]
			}
			memcached {
				hosts => [ "localhost:11211" ]
				ttl => 2592000
				set => {
					"[labels][cti_message]" => "%{[labels][md5_hash]}"
				}
			}
		}
		# store imphash
		if [labels][imphash] {
			mutate {
				lowercase => [ "[labels][imphash]" ]
			}
			memcached {
				hosts => [ "localhost:11211" ]
				ttl => 2592000
				set => {
					"[labels][cti_message]" => "%{[labels][imphash]}"
				}
			}
		}
		# store ssdeep
		if [labels][ssdeep] {
			mutate {
				lowercase => [ "[labels][ssdeep]" ]
			}
			memcached {
				hosts => [ "localhost:11211" ]
				ttl => 2592000
				set => {
					"[labels][cti_message]" => "%{[labels][ssdeep]}"
				}
			}
		}
		# store urls (full)
		if [labels][url] {
			mutate {
				lowercase => [ "[labels][url]" ]
			}
			memcached {
				hosts => [ "localhost:11211" ]
				ttl => 2592000
				set => {
					"[labels][cti_message]" => "%{[labels][url]}"
				}
			}
		}
		# store domain parsed from a URL
		if [labels][url_domain] {
			mutate {
				lowercase => [ "[labels][url_domain]" ]
			}
			memcached {
				hosts => [ "localhost:11211" ]
				ttl => 2592000
				set => {
					"[labels][cti_message]" => "%{[labels][url_domain]}"
				}
			}
		}
		# store ip
		if [labels][ip] {
			mutate {
				lowercase => [ "[labels][ip]" ]
			}
			memcached {
				hosts => [ "localhost:11211" ]
				ttl => 2592000
				set => {
					"[labels][cti_message]" => "%{[labels][ip]}"
				}
			}
		}
		# store custom indicators
		if [labels][indicator] {
			mutate {
				lowercase => [ "[labels][indicator]" ]
			}
			memcached {
				hosts => [ "localhost:11211" ]
				ttl => 2592000
				set => {
					"[labels][cti_message]" => "%{[labels][indicator]}"
				}
			}
		}
	}
}

# sinkhole all output
# Elasticsearch output included but commented out for convenience
output {
	null {}
	# display on stdout and send to Elasticsearch
	#stdout { codec => rubydebug { metadata => true }}
	# send indicators to Elasticsearch
#	elasticsearch {
#		hosts => [ "https://elasticsearch01.local:9200", "https://elasticsearch02.local:9200", "https://elasticsearch03.local:9200" ]
#		# id:api_key
#		api_key => "cAT1H5UBebDYjuBuKBXG:LHaHX_N8R9SYjjC4H7k7GA"
#		data_stream => true
#		ssl_enabled => true
#		ssl_certificate_authorities => "/etc/ssl/bookproject/ca-chain.cert.pem"
#	}
}
